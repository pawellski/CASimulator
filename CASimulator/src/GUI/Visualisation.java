/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Core.CellularAutomaton;
import Core.GameOfLife;
import Core.WireWorld;
import Grid.Cell;
import Grid.Grid;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Pawe≈Ç
 */
public class Visualisation extends javax.swing.JFrame implements Observator {

    private int numberHorizontalCells = 15;
    private int numberVerticalCells = 10;

    private int widthCell;
    private int heightCell;

    private CellularAutomaton currentGame = new WireWorld(numberVerticalCells + 2, numberHorizontalCells + 2);
    private Grid clipboardGrid;
    
    private String fileName;

    Graphics paintGrid;
    Image mainImage;

    private int interval = 1000;

    public Visualisation() {
        initComponents();
        mainImage = createImage(mainPanel.getWidth(), mainPanel.getHeight());
        paintGrid = mainImage.getGraphics();
        currentGame.addObservator(this);
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                onUpdate();
            }
        }
        );
    }

    @Override
    public void onUpdate() {
        widthCell = mainPanel.getWidth() / numberHorizontalCells;
        heightCell = mainPanel.getHeight() / numberVerticalCells;
        paintGrid.setColor(mainPanel.getForeground());
        paintGrid.fillRect(0, 0, mainPanel.getWidth(), mainPanel.getHeight());

        switch (currentGame.getClass().getName()) {
            case "Core.WireWorld":
                for (int i = 0; i < numberVerticalCells; i++) {
                    for (int j = 0; j < numberHorizontalCells; j++) {
                        switch (currentGame.getMainGrid().getGameGridCell(i + 1, j + 1)) {
                            case EMPTY:
                                paintGrid.setColor(Color.BLACK);
                                paintGrid.fillRect(j * heightCell, i * widthCell, widthCell, heightCell);
                                break;
                            case WIRE:
                                paintGrid.setColor(Color.YELLOW);
                                paintGrid.fillRect(j * heightCell, i * widthCell, widthCell, heightCell);
                                break;
                            case EHEAD:
                                paintGrid.setColor(Color.BLUE);
                                paintGrid.fillRect(j * heightCell, i * widthCell, widthCell, heightCell);
                                break;
                            case ETAIL:
                                paintGrid.setColor(Color.RED);
                                paintGrid.fillRect(j * heightCell, i * widthCell, widthCell, heightCell);
                                break;
                        }
                    }
                }
                break;
            case "Core.GameOfLife":
                for (int i = 0; i < numberVerticalCells; i++) {
                    for (int j = 0; j < numberHorizontalCells; j++) {
                        if (currentGame.getMainGrid().getGameGridCell(i + 1, j + 1) == Cell.ALIVE) {
                            paintGrid.setColor(Color.WHITE);
                            paintGrid.fillRect(j * heightCell, i * widthCell, widthCell, heightCell);
                        } else {
                            paintGrid.setColor(Color.BLACK);
                            paintGrid.fillRect(j * heightCell, i * widthCell, widthCell, heightCell);
                        }
                    }
                }
                break;
        }
        paintGrid.setColor(Color.WHITE);
        for (int i = 0; i < mainPanel.getHeight() + heightCell; i += heightCell) {
            paintGrid.drawLine(0, i, mainPanel.getWidth(), i);
        }
        for (int i = 0; i < mainPanel.getWidth() + widthCell; i += widthCell) {
            paintGrid.drawLine(i, 0, i, mainPanel.getHeight());
        }

        mainPanel.getGraphics().drawImage(mainImage, 0, 0, mainPanel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupCellState = new javax.swing.ButtonGroup();
        mainPanel = new javax.swing.JPanel();
        jToggleButtonGoLWW = new javax.swing.JToggleButton();
        jLabelNumberGeneration = new javax.swing.JLabel();
        jLabelFileName = new javax.swing.JLabel();
        jLabelGridSize = new javax.swing.JLabel();
        jLabelInterval = new javax.swing.JLabel();
        jTextFieldNumberGeneration = new javax.swing.JTextField();
        jButtonFilePath = new javax.swing.JButton();
        jTextFieldFileName = new javax.swing.JTextField();
        jButtonLoad = new javax.swing.JButton();
        jComboBoxSetDimension = new javax.swing.JComboBox<>();
        jComboBoxSetInterval = new javax.swing.JComboBox<>();
        jButtonSave = new javax.swing.JButton();
        jButtonClearGrid = new javax.swing.JButton();
        jButtonCopyGrid = new javax.swing.JButton();
        jButtonPasteGrid = new javax.swing.JButton();
        jButtonRun = new javax.swing.JButton();
        jButtonPause = new javax.swing.JButton();
        jButtonOneStep = new javax.swing.JButton();
        jSeparatorMenu = new javax.swing.JSeparator();
        jRadioButtonWire = new javax.swing.JRadioButton();
        jRadioButtonElectronHead = new javax.swing.JRadioButton();
        jRadioButtonElectronTail = new javax.swing.JRadioButton();
        jPanelYellow = new javax.swing.JPanel();
        jPanelBlue = new javax.swing.JPanel();
        jPanelRed = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CA Simulator");
        setLocation(new java.awt.Point(0, 0));
        setResizable(false);

        mainPanel.setBackground(new java.awt.Color(0, 0, 0));
        mainPanel.setPreferredSize(new java.awt.Dimension(600, 400));
        mainPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mainPanelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );

        jToggleButtonGoLWW.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jToggleButtonGoLWW.setText("WIRE WORLD");
        jToggleButtonGoLWW.setToolTipText("");
        jToggleButtonGoLWW.setActionCommand("");
        jToggleButtonGoLWW.setDoubleBuffered(true);
        jToggleButtonGoLWW.setPreferredSize(new java.awt.Dimension(150, 25));
        jToggleButtonGoLWW.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jToggleButtonGoLWWMouseClicked(evt);
            }
        });

        jLabelNumberGeneration.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabelNumberGeneration.setText("Number of generations");
        jLabelNumberGeneration.setPreferredSize(new java.awt.Dimension(155, 20));

        jLabelFileName.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabelFileName.setText("File name");
        jLabelFileName.setPreferredSize(new java.awt.Dimension(64, 20));

        jLabelGridSize.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabelGridSize.setText("Grid size");
        jLabelGridSize.setPreferredSize(new java.awt.Dimension(58, 20));

        jLabelInterval.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabelInterval.setText("Interval");
        jLabelInterval.setPreferredSize(new java.awt.Dimension(53, 20));

        jTextFieldNumberGeneration.setText("0");

        jButtonFilePath.setBackground(new java.awt.Color(255, 255, 255));
        jButtonFilePath.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jButtonFilePath.setText("...");
        jButtonFilePath.setPreferredSize(new java.awt.Dimension(45, 20));
        jButtonFilePath.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonFilePathMouseClicked(evt);
            }
        });

        jTextFieldFileName.setToolTipText("LOAD");

        jButtonLoad.setBackground(new java.awt.Color(255, 255, 255));
        jButtonLoad.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        jButtonLoad.setText("LOAD");
        jButtonLoad.setToolTipText("");
        jButtonLoad.setMinimumSize(new java.awt.Dimension(65, 25));
        jButtonLoad.setPreferredSize(new java.awt.Dimension(73, 20));
        jButtonLoad.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonLoadMouseClicked(evt);
            }
        });

        jComboBoxSetDimension.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "15 x 10", "30 x 20", "60 x 40", "120 x 80" }));
        jComboBoxSetDimension.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSetDimensionActionPerformed(evt);
            }
        });

        jComboBoxSetInterval.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1/8 s", "1/4 s", "1/2 s", "1 s", "2 s" }));
        jComboBoxSetInterval.setSelectedIndex(3);
        jComboBoxSetInterval.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSetIntervalActionPerformed(evt);
            }
        });

        jButtonSave.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        jButtonSave.setText("SAVE");
        jButtonSave.setPreferredSize(new java.awt.Dimension(110, 50));
        jButtonSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonSaveMouseClicked(evt);
            }
        });

        jButtonClearGrid.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        jButtonClearGrid.setText("CLEAR GRID");
        jButtonClearGrid.setPreferredSize(new java.awt.Dimension(110, 50));
        jButtonClearGrid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClearGridMouseClicked(evt);
            }
        });

        jButtonCopyGrid.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        jButtonCopyGrid.setText("COPY GRID");
        jButtonCopyGrid.setPreferredSize(new java.awt.Dimension(110, 50));
        jButtonCopyGrid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonCopyGridMouseClicked(evt);
            }
        });

        jButtonPasteGrid.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        jButtonPasteGrid.setText("PASTE GRID");
        jButtonPasteGrid.setPreferredSize(new java.awt.Dimension(110, 50));
        jButtonPasteGrid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonPasteGridMouseClicked(evt);
            }
        });

        jButtonRun.setBackground(new java.awt.Color(255, 255, 255));
        jButtonRun.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/play.png"))); // NOI18N
        jButtonRun.setPreferredSize(new java.awt.Dimension(60, 35));
        jButtonRun.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonRunMouseClicked(evt);
            }
        });

        jButtonPause.setBackground(new java.awt.Color(255, 255, 255));
        jButtonPause.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/pause.png"))); // NOI18N
        jButtonPause.setToolTipText("");
        jButtonPause.setPreferredSize(new java.awt.Dimension(60, 35));

        jButtonOneStep.setBackground(new java.awt.Color(255, 255, 255));
        jButtonOneStep.setForeground(new java.awt.Color(255, 255, 255));
        jButtonOneStep.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/skip.png"))); // NOI18N
        jButtonOneStep.setPreferredSize(new java.awt.Dimension(60, 35));

        buttonGroupCellState.add(jRadioButtonWire);
        jRadioButtonWire.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jRadioButtonWire.setSelected(true);
        jRadioButtonWire.setText("Wire");

        buttonGroupCellState.add(jRadioButtonElectronHead);
        jRadioButtonElectronHead.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jRadioButtonElectronHead.setText("Electron Head");

        buttonGroupCellState.add(jRadioButtonElectronTail);
        jRadioButtonElectronTail.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jRadioButtonElectronTail.setText("Electron Tail");
        jRadioButtonElectronTail.setPreferredSize(new java.awt.Dimension(107, 20));

        jPanelYellow.setBackground(new java.awt.Color(255, 255, 102));
        jPanelYellow.setPreferredSize(new java.awt.Dimension(20, 20));

        javax.swing.GroupLayout jPanelYellowLayout = new javax.swing.GroupLayout(jPanelYellow);
        jPanelYellow.setLayout(jPanelYellowLayout);
        jPanelYellowLayout.setHorizontalGroup(
            jPanelYellowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        jPanelYellowLayout.setVerticalGroup(
            jPanelYellowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        jPanelBlue.setBackground(new java.awt.Color(0, 51, 204));
        jPanelBlue.setPreferredSize(new java.awt.Dimension(20, 20));

        javax.swing.GroupLayout jPanelBlueLayout = new javax.swing.GroupLayout(jPanelBlue);
        jPanelBlue.setLayout(jPanelBlueLayout);
        jPanelBlueLayout.setHorizontalGroup(
            jPanelBlueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        jPanelBlueLayout.setVerticalGroup(
            jPanelBlueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        jPanelRed.setBackground(new java.awt.Color(255, 51, 51));
        jPanelRed.setPreferredSize(new java.awt.Dimension(20, 20));

        javax.swing.GroupLayout jPanelRedLayout = new javax.swing.GroupLayout(jPanelRed);
        jPanelRed.setLayout(jPanelRedLayout);
        jPanelRedLayout.setHorizontalGroup(
            jPanelRedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        jPanelRedLayout.setVerticalGroup(
            jPanelRedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelFileName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldFileName, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(jButtonLoad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparatorMenu, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jRadioButtonWire, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanelYellow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jRadioButtonElectronHead, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanelBlue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jRadioButtonElectronTail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanelRed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(28, 28, 28))))
            .addGroup(layout.createSequentialGroup()
                .addGap(620, 620, 620)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelNumberGeneration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldNumberGeneration, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButtonClearGrid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jButtonSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButtonCopyGrid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jButtonRun, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(32, 32, 32))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabelGridSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabelInterval, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jComboBoxSetDimension, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jComboBoxSetInterval, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(4, 4, 4)
                                    .addComponent(jButtonPause, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(35, 35, 35)
                                    .addComponent(jButtonOneStep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(72, 72, 72)
                                    .addComponent(jButtonPasteGrid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jToggleButtonGoLWW, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(120, 120, 120))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jToggleButtonGoLWW, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelNumberGeneration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldNumberGeneration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelFileName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldFileName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonLoad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelGridSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxSetDimension, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelInterval, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxSetInterval, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonClearGrid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonCopyGrid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonPasteGrid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonRun, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonPause, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonOneStep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addComponent(jSeparatorMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jRadioButtonElectronHead, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jRadioButtonWire))
                            .addComponent(jRadioButtonElectronTail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanelYellow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanelBlue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanelRed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(33, 41, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButtonFilePath, jButtonLoad, jTextFieldFileName});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jComboBoxSetDimension, jLabelGridSize});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jComboBoxSetInterval, jLabelInterval});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButtonClearGrid, jButtonSave});

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButtonGoLWWMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jToggleButtonGoLWWMouseClicked
        switch (currentGame.getClass().getName()) {
            case "Core.WireWorld":
                currentGame = new GameOfLife(numberVerticalCells + 2, numberHorizontalCells + 2);
                jToggleButtonGoLWW.setText("GAME OF LIFE");
                jRadioButtonWire.setVisible(false);
                jRadioButtonElectronHead.setVisible(false);
                jRadioButtonElectronTail.setVisible(false);
                jPanelYellow.setVisible(false);
                jPanelBlue.setVisible(false);
                jPanelRed.setVisible(false);
                onUpdate();
                break;
            case "Core.GameOfLife":
                currentGame = new WireWorld(numberVerticalCells + 2, numberHorizontalCells + 2);
                jToggleButtonGoLWW.setText("WIRE WORLD");
                jRadioButtonWire.setVisible(true);
                jRadioButtonElectronHead.setVisible(true);
                jRadioButtonElectronTail.setVisible(true);
                jPanelYellow.setVisible(true);
                jPanelBlue.setVisible(true);
                jPanelRed.setVisible(true);
                onUpdate();
                break;
        }
    }//GEN-LAST:event_jToggleButtonGoLWWMouseClicked

    private void mainPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainPanelMouseClicked
        int cellDimX = evt.getX() / widthCell;
        int cellDimY = evt.getY() / heightCell;
        switch (currentGame.getClass().getName()) {
            case "Core.WireWorld":
                if (jRadioButtonWire.isSelected()) {
                    if (currentGame.getMainGrid().getGameGridCell(cellDimY + 1, cellDimX + 1) == Cell.WIRE) {
                        currentGame.getMainGrid().setGameGridCell(cellDimY + 1, cellDimX + 1, Cell.EMPTY);
                    } else {
                        currentGame.getMainGrid().setGameGridCell(cellDimY + 1, cellDimX + 1, Cell.WIRE);
                    }
                    onUpdate();

                } else if (jRadioButtonElectronHead.isSelected()) {
                    if (currentGame.getMainGrid().getGameGridCell(cellDimY + 1, cellDimX + 1) == Cell.EHEAD) {
                        currentGame.getMainGrid().setGameGridCell(cellDimY + 1, cellDimX + 1, Cell.EMPTY);
                    } else {
                        currentGame.getMainGrid().setGameGridCell(cellDimY + 1, cellDimX + 1, Cell.EHEAD);
                    }
                    onUpdate();

                } else if (jRadioButtonElectronTail.isSelected()) {
                    if (currentGame.getMainGrid().getGameGridCell(cellDimY + 1, cellDimX + 1) == Cell.ETAIL) {
                        currentGame.getMainGrid().setGameGridCell(cellDimY + 1, cellDimX + 1, Cell.EMPTY);
                    } else {
                        currentGame.getMainGrid().setGameGridCell(cellDimY + 1, cellDimX + 1, Cell.ETAIL);
                    }
                    onUpdate();
                }
                break;
            case "Core.GameOfLife":
                if (currentGame.getMainGrid().getGameGridCell(cellDimY + 1, cellDimX + 1) == Cell.ALIVE) {
                    currentGame.getMainGrid().setGameGridCell(cellDimY + 1, cellDimX + 1, Cell.DEAD);
                } else {
                    currentGame.getMainGrid().setGameGridCell(cellDimY + 1, cellDimX + 1, Cell.ALIVE);
                }
                onUpdate();
                break;
        }
    }//GEN-LAST:event_mainPanelMouseClicked

    private void jButtonRunMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonRunMouseClicked
        int countGen = Integer.parseInt(jTextFieldNumberGeneration.getText());
        if (countGen < 0) {
            JOptionPane.showMessageDialog(null, "The number of generations can't be negative!", "Number of generations warning", JOptionPane.WARNING_MESSAGE);
        } else {
            currentGame.addObservator(this);
            java.awt.EventQueue.invokeLater(new Runnable() {
                @Override
                public void run() {
                    for (int it = 0; it < countGen; it++) {
                        currentGame.generate(interval);
                    }
                }
            }
            );
        }
    }//GEN-LAST:event_jButtonRunMouseClicked

    private void jButtonCopyGridMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonCopyGridMouseClicked
        clipboardGrid = new Grid(currentGame.getMainGrid().getHeight(), currentGame.getMainGrid().getWidth());
        for (int i = 0; i < clipboardGrid.getHeight(); i++) {
            for (int j = 0; j < clipboardGrid.getWidth(); j++) {
                clipboardGrid.setGameGridCell(i, j, currentGame.getMainGrid().getGameGridCell(i, j));
            }
        }
    }//GEN-LAST:event_jButtonCopyGridMouseClicked

    private void jButtonPasteGridMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonPasteGridMouseClicked
        try {
            for (int i = 1; i < currentGame.getMainGrid().getHeight() - 1; i++) {
                for (int j = 1; j < currentGame.getMainGrid().getWidth() - 1; j++) {
                    currentGame.getMainGrid().setGameGridCell(i, j, clipboardGrid.getGameGridCell(i, j));
                }
            }
            onUpdate();
        } catch (NullPointerException e) {
            System.err.println("Aktualnie w schowku nie ma planszy!");
        }
    }//GEN-LAST:event_jButtonPasteGridMouseClicked

    private void jButtonClearGridMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonClearGridMouseClicked
        switch (currentGame.getClass().getName()) {
            case "Core.WireWorld":
                for (int i = 1; i < currentGame.getMainGrid().getHeight() - 1; i++) {
                    for (int j = 1; j < currentGame.getMainGrid().getWidth() - 1; j++) {
                        currentGame.getMainGrid().setGameGridCell(i, j, Cell.EMPTY);
                    }
                }
                onUpdate();
                break;
            case "Core.GameOfLife":
                for (int i = 1; i < currentGame.getMainGrid().getHeight() - 1; i++) {
                    for (int j = 1; j < currentGame.getMainGrid().getWidth() - 1; j++) {
                        currentGame.getMainGrid().setGameGridCell(i, j, Cell.DEAD);
                    }
                }
                onUpdate();
                break;
        }
    }//GEN-LAST:event_jButtonClearGridMouseClicked

    private void jComboBoxSetDimensionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSetDimensionActionPerformed
        switch (jComboBoxSetDimension.getSelectedItem().toString()) {
            case "15 x 10":
                numberHorizontalCells = 15;
                numberVerticalCells = 10;
                currentGame.resizeGameGrid(numberVerticalCells + 2, numberHorizontalCells + 2);
                onUpdate();
                break;
            case "30 x 20":
                numberHorizontalCells = 30;
                numberVerticalCells = 20;
                currentGame.resizeGameGrid(numberVerticalCells + 2, numberHorizontalCells + 2);
                onUpdate();

                break;
            case "60 x 40":
                numberHorizontalCells = 60;
                numberVerticalCells = 40;
                currentGame.resizeGameGrid(numberVerticalCells + 2, numberHorizontalCells + 2);
                onUpdate();
                break;
            case "120 x 80":
                numberHorizontalCells = 120;
                numberVerticalCells = 80;
                currentGame.resizeGameGrid(numberVerticalCells + 2, numberHorizontalCells + 2);
                onUpdate();
                break;
        }
    }//GEN-LAST:event_jComboBoxSetDimensionActionPerformed

    private void jComboBoxSetIntervalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSetIntervalActionPerformed
        switch (jComboBoxSetInterval.getSelectedItem().toString()) {
            case "1/8 s":
                interval = 125;
                break;
            case "1/4 s":
                interval = 250;
                break;
            case "1/2 s":
                interval = 500;
                break;
            case "1 s":
                interval = 1000;
                break;
            case "2 s":
                interval = 2000;
                break;
        }
    }//GEN-LAST:event_jComboBoxSetIntervalActionPerformed

    private void jButtonFilePathMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonFilePathMouseClicked
        JFileChooser fc = new JFileChooser();
        if (fc.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            fileName = fc.getSelectedFile().getAbsolutePath();
            jTextFieldFileName.setText(fileName);
        }
    }//GEN-LAST:event_jButtonFilePathMouseClicked

    private void jButtonLoadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonLoadMouseClicked
        try {
            FileReader fr = new FileReader(jTextFieldFileName.getText());
            fr.readFile(this.currentGame);
            onUpdate();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Visualisation.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonLoadMouseClicked

    private void jButtonSaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonSaveMouseClicked
        JFileChooser fc = new JFileChooser();
        if(fc.showSaveDialog(null)==JFileChooser.APPROVE_OPTION){
            try {
                SaveFileWriter sfw = new SaveFileWriter(fc.getSelectedFile().getPath());
                sfw.writeFile(this.currentGame);
            } catch (IOException ex) {
                Logger.getLogger(Visualisation.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButtonSaveMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Visualisation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Visualisation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Visualisation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Visualisation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Visualisation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupCellState;
    private javax.swing.JButton jButtonClearGrid;
    private javax.swing.JButton jButtonCopyGrid;
    private javax.swing.JButton jButtonFilePath;
    private javax.swing.JButton jButtonLoad;
    private javax.swing.JButton jButtonOneStep;
    private javax.swing.JButton jButtonPasteGrid;
    private javax.swing.JButton jButtonPause;
    private javax.swing.JButton jButtonRun;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JComboBox<String> jComboBoxSetDimension;
    private javax.swing.JComboBox<String> jComboBoxSetInterval;
    private javax.swing.JLabel jLabelFileName;
    private javax.swing.JLabel jLabelGridSize;
    private javax.swing.JLabel jLabelInterval;
    private javax.swing.JLabel jLabelNumberGeneration;
    private javax.swing.JPanel jPanelBlue;
    private javax.swing.JPanel jPanelRed;
    private javax.swing.JPanel jPanelYellow;
    private javax.swing.JRadioButton jRadioButtonElectronHead;
    private javax.swing.JRadioButton jRadioButtonElectronTail;
    private javax.swing.JRadioButton jRadioButtonWire;
    private javax.swing.JSeparator jSeparatorMenu;
    private javax.swing.JTextField jTextFieldFileName;
    private javax.swing.JTextField jTextFieldNumberGeneration;
    private javax.swing.JToggleButton jToggleButtonGoLWW;
    private javax.swing.JPanel mainPanel;
    // End of variables declaration//GEN-END:variables
}
